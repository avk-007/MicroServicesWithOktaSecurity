server:
  port: 8081

spring:
  application:
    name: userService
  datasource:
    url: jdbc:mysql://localhost:3306/microservicesDb
    username: root
    password: test
    driver-class-name: com.mysql.cj.jdbc.Driver
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      dialect: org.hibernate.dialect.MySQL8Dialect


  config:
    import: configserver:http://localhost:8085
#  profiles:
#    active: dev

    #        spring.config.import= configserver:http://localhost:8085
  security:
    oauth2:
      resource-server:
         jwt:
           issuer-uri: https://dev-98806091.okta.com/oauth2/default
      client:
        registration:
          myInternalClient:
            provider: okta
            authorization-grant-type: client_credentials
            scope: internal
            client-id: 0oabcwigeq8s2DvYp5d7
            client-secret: QSNKyl2Oyg8pcxHtBU4P7xHO0aBs5llNh6yyH2XDxYKAxDoAFUz_n3QMJwSP4zrX
        provider:
          okta:
            issuerUri: https://dev-98806091.okta.com/oauth2/default



#    eureka:
#      instance:
#        prefer-ip-address: true
#        client:
#          fetch-registry: true
#          register-with-eureka: true
#          service-url:
#            defaultZone: http://localhost:8761/eureka/

#as these configs we are getting Repo so no need of from now
management:
  health:
    circuitbreakers:
      enabled: true
  endpoints:
    web:
      exposure:
        include: health

  endpoint:
    health:
      show-details: always

resilience4j:
  circuitbreaker:
    instances:
      ratingHotelBreaker:
        registerHealthIndicator: true
        eventConsumerBufferSize: 10
        failureRateThreshold: 50
        minimumNumberOfCalls: 5
        automaticTransitionFromOpenToHalfOpenEnabled: true
        waitDurationInOpenState: 6s
        permittedNumberOfCallsInHalfOpenState: 3
        slidingWindowSize: 10
        slidingWindowType: COUNT_BASED

  retry:
    instances:
      ratingHotelService:
        maxAttempts: 3
        waitDuration: 5s

  ratelimiter:
    instances:
      userRateLimiter:
        limitForPeriod: 2
        limitRefreshPeriod: 4s
        timeoutDuration: 0s

#        while implement security in userservice do config for clent too
okta:
  oauth2:
    issuer: https://dev-98806091.okta.com/oauth2/default
    audience: api://default


#configuring all this setting from https://resilience4j.readme.io/docs/circuitbreaker#count-based-sliding-window




